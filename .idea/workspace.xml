<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="3b471ed0-8101-40ea-86a5-59f8e8fdb4b9" name="Changes" comment="progress documentation">
      <change afterPath="$PROJECT_DIR$/Bank E2E.postman_collection.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
        <option value="HTTP Request" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="ROOT_SYNC" value="SYNC" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="mavenHome" value="$USER_HOME$/apache-maven-3.6.3" />
      </MavenGeneralSettings>
    </option>
  </component>
  <component name="ProjectId" id="2SVwGlhwuxGbyzv8xcpvjZspRny" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "RequestMappingsPanelOrder0": "0",
    "RequestMappingsPanelOrder1": "1",
    "RequestMappingsPanelWidth0": "75",
    "RequestMappingsPanelWidth1": "75",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "master",
    "jdk.selected.JAVA_MODULE": "corretto-17",
    "last_opened_file_path": "C:/Users/ktnaji/Documents/formation/mocroservice/TP/tp-parent",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "onboarding.tips.debug.path": "C:/Users/ktnaji/Documents/formation/mocroservice/TP/tp-parent/src/main/java/org/example/Main.java",
    "settings.editor.selected.configurable": "project.propVCSSupport.DirectoryMappings",
    "spring.configuration.checksum": "aaaf6a210cfa21dbdf0155f23d7ec1b7",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\ktnaji\Documents\formation\mocroservice\TP\tp-parent" />
      <recent name="C:\Users\ktnaji\Documents\formation\mocroservice\TP\tp-parent\keycloak-security-starter\src\main\java\com\example\security\starter\keycloak" />
      <recent name="C:\Users\ktnaji\Documents\formation\mocroservice\TP\tp-parent\payment-service\src\main\java\com\example\paymentservice\controller" />
      <recent name="C:\Users\ktnaji\Documents\formation\mocroservice\TP\tp-parent\keycloak-security-starter\src\main\resources" />
      <recent name="C:\Users\ktnaji\Documents\formation\mocroservice\TP\tp-parent\payment-service\src\main\java" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\ktnaji\Documents\formation\mocroservice\TP\tp-parent\docker" />
      <recent name="C:\Users\ktnaji\Documents\formation\mocroservice\TP\tp-parent\docker\apps\prometheus\configs" />
      <recent name="C:\Users\ktnaji\Documents\formation\mocroservice\TP\tp-parent\docker\tracing\config" />
      <recent name="C:\Users\ktnaji\Documents\formation\mocroservice\TP\tp-parent\docker\tracing\config\prometheus" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="com.example.reportingservice" />
    </key>
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="mvn install -DskipTests" />
      <command value="mvn install -DSkipTests" />
      <command value="mvn install" />
    </option>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="SpringBootApplicationConfigurationType" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Docker.docker.prometheus: Compose Deployment">
    <configuration name="All in e2e-test" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" path="$PROJECT_DIR$/e2e-test.http">
      <method v="2" />
    </configuration>
    <configuration name="ConfigServerApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="config-server" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.configserver.ConfigServerApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="EurikaServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="eureka-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.eurikaservice.EurikaServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="GatewayServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="gateway-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.gatewayservice.GatewayServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="PaymentServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="payment-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.paymentservice.PaymentServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ReportingServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="reporting-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.reportingservice.ReportingServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker.prometheus: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="prometheus" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="tracing/tracing-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker/tracing/tracing-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="tracing/tracing-compose.yml.prometheus: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="prometheus" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker/tracing/tracing-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.docker.prometheus: Compose Deployment" />
      <item itemvalue="Docker.tracing/tracing-compose.yml.prometheus: Compose Deployment" />
      <item itemvalue="Docker.tracing/tracing-compose.yml: Compose Deployment" />
      <item itemvalue="Docker.docker: Compose Deployment" />
      <item itemvalue="HTTP Request.All in e2e-test" />
      <item itemvalue="Spring Boot.ReportingServiceApplication" />
      <item itemvalue="Spring Boot.ConfigServerApplication" />
      <item itemvalue="Spring Boot.EurikaServiceApplication" />
      <item itemvalue="Spring Boot.PaymentServiceApplication" />
      <item itemvalue="Spring Boot.GatewayServiceApplication" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker.prometheus: Compose Deployment" />
        <item itemvalue="Docker.tracing/tracing-compose.yml: Compose Deployment" />
        <item itemvalue="Docker.tracing/tracing-compose.yml.prometheus: Compose Deployment" />
        <item itemvalue="Docker.docker: Compose Deployment" />
        <item itemvalue="HTTP Request.All in e2e-test" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="3b471ed0-8101-40ea-86a5-59f8e8fdb4b9" name="Changes" comment="" />
      <created>1689244964599</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1689244964599</updated>
      <workItem from="1689244965627" duration="1924000" />
      <workItem from="1689246914459" duration="4145000" />
      <workItem from="1689256573313" duration="5836000" />
      <workItem from="1689282293008" duration="12290000" />
      <workItem from="1689296154360" duration="4735000" />
      <workItem from="1689321720396" duration="23457000" />
    </task>
    <task id="LOCAL-00001" summary="first commit, setUp microservice infrastructure &amp; security with keycloak">
      <created>1689322881750</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1689322881750</updated>
    </task>
    <task id="LOCAL-00002" summary="first commit, setUp microservice infrastructure &amp; security with keycloak">
      <created>1689322902065</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1689322902066</updated>
    </task>
    <task id="LOCAL-00003" summary="adding feing client to communicate between microservices&#10;&#10;adding circuit breaker and a fallback processing to the methods of the feign client">
      <created>1689326747974</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1689326747974</updated>
    </task>
    <task id="LOCAL-00004" summary="adding the request interceptor to inject tokent to communicate between all the secured microservices">
      <created>1689330688009</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1689330688009</updated>
    </task>
    <task id="LOCAL-00005" summary="adding distributed tracing with project micrometer and zipkin">
      <created>1689344838549</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1689344838549</updated>
    </task>
    <task id="LOCAL-00006" summary="progress documentation">
      <created>1689350927733</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1689350927733</updated>
    </task>
    <option name="localTasksCounter" value="7" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <ignored-roots>
      <path value="$PROJECT_DIR$/config-server" />
      <path value="$PROJECT_DIR$/eureka-service" />
      <path value="$PROJECT_DIR$/gateway-service" />
      <path value="$PROJECT_DIR$/payment-service" />
      <path value="$PROJECT_DIR$/keycloak-security-starter" />
      <path value="$PROJECT_DIR$/reporting-service" />
    </ignored-roots>
    <MESSAGE value="first commit, setUp microservice infrastructure &amp; security with keycloak" />
    <MESSAGE value="adding feing client to communicate between microservices&#10;&#10;adding circuit breaker and a fallback processing to the methods of the feign client" />
    <MESSAGE value="adding the request interceptor to inject tokent to communicate between all the secured microservices" />
    <MESSAGE value="adding distributed tracing with project micrometer and zipkin" />
    <MESSAGE value="progress documentation" />
    <option name="LAST_COMMIT_MESSAGE" value="progress documentation" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/Main.java</url>
          <line>15</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>